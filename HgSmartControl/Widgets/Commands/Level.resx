<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAADcCAIAAABPrzCxAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABp0RVh0U29mdHdhcmUAUGFpbnQuTkVUIHYzLjUuMTFH80I3AAAEm0lEQVR4Xu3P
        ZXNcRxCF4aM4dhQn/9FhdMjMzMzMjJKZmZktM8uWmRmzipTV6mhXe2G653bVrXq6Zt6PB58+fW1aOsC3
        dIBv6QDf0gG+pQN8Swf4lg7wLR3gWzrAt3SAb+kA39IBvqUDfEsH+JYO8C0d4Fs6wLd0gG8aAz5+/EoO
        Mvfhg2Goed6/V/HOPeTGOx1vXQJ1xts3loA6681rDa9jAzV7Je7Vy1hA7cvLFxGBuqDnGl6EB+oinml4
        Hgaog3j2VMWTQEAd3NMnzcU9Lg7UYT155BmoI3j80CdQR/bogYaH9xmoTXhwrw5yw5m7Gu7/BzWPiDvi
        7t1pjswJui0Od6uaS7sjCdXPLQ23b4oAtbSqSsdAXVX5pYJbN5wBda3rGm66AOp6romrvBoXqBu6oeBK
        dKDO67qOy1GAuhHXLiURqIu6elHFhaBAHdAVeZfPBwLqcM6Ju1QMqEM7q+FiYaCO6IyGCxWlDYE6+c6f
        rgfU8Z07pQrUrpw9qQTUDp05oQFnjpeKqhCGimOlCk4flYKa55SOI+4hN07qOOwSqDNOHLIE1FnHD8o7
        4ACoyTEF+2MBdUNH93+h4Mi+iEBd0F4Nh8MDdRF7NBzaHQKoE+LgrqBAnSgHdhYH6lD27/AP1BHs265i
        W36gjmyvjq0M1DHt0bGlDnLDld2bxe36H7I/xzZp2LmxGTJnGnZsaCZuvSBkbruOdSKQ/W1TsXWtY6De
        ukbDFndAXWu1uM2r3AC1sk0r4wK1FxtXRAfqvDYsTy5QN2L9MhXl4YC6qHUKypoGB+qA1ipYGgiog1uz
        JBFAHdbqxRpWLSoI1Em2cmEeoE64FQsYqB2YL255DuSGM/M0LJtbDTWPhHIVKJ/TVFSZMJTNbqpg6Swp
        oBa1ZObnzqFez9Cw2ClQZyyabgmosxZOkzfVAVDnWqBjSiygbmj+5EQDdSHzJmmYOzE0UHs3Z0I4oE6I
        2eODAnVQ4zTMCgDU4YzVMHNMY0CdWDNGN8kL1JFNVzAqD1DHNG2kNlDHN3WEiuG1kP25NUXHsCbInJzJ
        8jBpaBNxQwQhcxN1DBaB7G/CIJNAPX6gMaDOGDdAw9j+boBa2Zh+n8UEatZXw+gYQJ1fHw2jIgF1Y3qL
        G9krNFAXNUJBzxBAHcTwHgkC6uCGdU8EUIc1tJuKrgWBOpoh8gZ3yQ/UsXQWN6gBUMfVScPAjnWQG+6U
        KBjQoRpqHrvQv32JrHay0K9diYK+baWg9tdGQx8BqNetxfV2DdS9W2no9Y8zoNbU828HQJ2rx18GgLqh
        7n8mGqgL6faHvJZRgLpxXVtC3O/hcBfV5TcNnQPjDupXDZ0C4A7nFw0df24MdzJ1+Kkg7uh+FNc+H+44
        2v3gAXd8bb9X8V2tup9bbXR8i+qT0/obcdwSWrUQxG0Otznc5nCbw20Otznc5nCbw20Otznc5nCbw20O
        tznc5nCbw20Otznc5nCbw20Otznc5nCbw20Otznc5nCbw20Otznc5nCbw20Otznc5nCbw20Otznc5nCb
        w20Otznc5nCbw20Otznc5nCbw20Otznc5nAb0wL/AvCcJHUiPvHxAAAAAElFTkSuQmCC
</value>
  </data>
</root>